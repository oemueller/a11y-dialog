/*! a11y-dialog 7.1.0 — © Kitty Giraudel */
var t = [
  'a[href]:not([tabindex^="-"])',
  'area[href]:not([tabindex^="-"])',
  'input:not([type="hidden"]):not([type="radio"]):not([disabled]):not([tabindex^="-"])',
  'input[type="radio"]:not([disabled]):not([tabindex^="-"]):checked',
  'select:not([disabled]):not([tabindex^="-"])',
  'textarea:not([disabled]):not([tabindex^="-"])',
  'button:not([disabled]):not([tabindex^="-"])',
  'iframe:not([tabindex^="-"])',
  'audio[controls]:not([tabindex^="-"])',
  'video[controls]:not([tabindex^="-"])',
  '[contenteditable]:not([tabindex^="-"])',
  '[tabindex]:not([tabindex^="-"])',
]
var e = !1
if ('undefined' != typeof window) {
  var i = {
    get passive() {
      e = !0
    },
  }
  window.addEventListener('testPassive', null, i),
    window.removeEventListener('testPassive', null, i)
}
var n =
    'undefined' != typeof window &&
    window.navigator &&
    window.navigator.platform &&
    (/iP(ad|hone|od)/.test(window.navigator.platform) ||
      ('MacIntel' === window.navigator.platform &&
        window.navigator.maxTouchPoints > 1)),
  o = [],
  s = !1,
  r = -1,
  d = void 0,
  a = void 0,
  h = function (t) {
    return o.some(function (e) {
      return !(!e.options.allowTouchMove || !e.options.allowTouchMove(t))
    })
  },
  l = function (t) {
    var e = t || window.event
    return (
      !!h(e.target) ||
      e.touches.length > 1 ||
      (e.preventDefault && e.preventDefault(), !1)
    )
  },
  c = function (t, i) {
    if (t) {
      if (
        !o.some(function (e) {
          return e.targetElement === t
        })
      ) {
        var c = { targetElement: t, options: i || {} }
        ;(o = [].concat(
          (function (t) {
            if (Array.isArray(t)) {
              for (var e = 0, i = Array(t.length); e < t.length; e++)
                i[e] = t[e]
              return i
            }
            return Array.from(t)
          })(o),
          [c]
        )),
          n
            ? ((t.ontouchstart = function (t) {
                1 === t.targetTouches.length && (r = t.targetTouches[0].clientY)
              }),
              (t.ontouchmove = function (e) {
                1 === e.targetTouches.length &&
                  (function (t, e) {
                    var i = t.targetTouches[0].clientY - r
                    !h(t.target) &&
                      ((e && 0 === e.scrollTop && i > 0) ||
                      ((function (t) {
                        return (
                          !!t && t.scrollHeight - t.scrollTop <= t.clientHeight
                        )
                      })(e) &&
                        i < 0)
                        ? l(t)
                        : t.stopPropagation())
                  })(e, t)
              }),
              s ||
                (document.addEventListener(
                  'touchmove',
                  l,
                  e ? { passive: !1 } : void 0
                ),
                (s = !0)))
            : (function (t) {
                if (void 0 === a) {
                  var e = !!t && !0 === t.reserveScrollBarGap,
                    i = window.innerWidth - document.documentElement.clientWidth
                  e &&
                    i > 0 &&
                    ((a = document.body.style.paddingRight),
                    (document.body.style.paddingRight = i + 'px'))
                }
                void 0 === d &&
                  ((d = document.body.style.overflow),
                  (document.body.style.overflow = 'hidden'))
              })(i)
      }
    } else
      console.error(
        'disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.'
      )
  },
  u = function (t) {
    t
      ? ((o = o.filter(function (e) {
          return e.targetElement !== t
        })),
        n
          ? ((t.ontouchstart = null),
            (t.ontouchmove = null),
            s &&
              0 === o.length &&
              (document.removeEventListener(
                'touchmove',
                l,
                e ? { passive: !1 } : void 0
              ),
              (s = !1)))
          : o.length ||
            (void 0 !== a &&
              ((document.body.style.paddingRight = a), (a = void 0)),
            void 0 !== d && ((document.body.style.overflow = d), (d = void 0))))
      : console.error(
          'enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.'
        )
  }
function f(t) {
  ;(this._show = this.show.bind(this)),
    (this._hide = this.hide.bind(this)),
    (this._maintainFocus = this._maintainFocus.bind(this)),
    (this._bindKeypress = this._bindKeypress.bind(this)),
    (this.$el = t),
    (this.shown = !1),
    (this._id = this.$el.getAttribute('data-a11y-dialog') || this.$el.id),
    (this._previouslyFocused = null),
    (this._listeners = {}),
    this.create()
}
function v(t, e) {
  return (
    (i = (e || document).querySelectorAll(t)), Array.prototype.slice.call(i)
  )
  var i
}
function p(t) {
  var e = y(t),
    i = t.querySelector('[autofocus]') || e[0]
  i && i.focus()
}
function y(e) {
  return v(t.join(','), e).filter(function (t) {
    return !!(t.offsetWidth || t.offsetHeight || t.getClientRects().length)
  })
}
function m() {
  v('[data-a11y-dialog]').forEach(function (t) {
    new f(t)
  })
}
;(f.prototype.create = function () {
  return (
    this.$el.setAttribute('aria-hidden', !0),
    this.$el.setAttribute('aria-modal', !0),
    this.$el.hasAttribute('role') || this.$el.setAttribute('role', 'dialog'),
    (this._openers = v('[data-a11y-dialog-show="' + this._id + '"]')),
    this._openers.forEach(
      function (t) {
        t.addEventListener('click', this._show)
      }.bind(this)
    ),
    (this._closers = v('[data-a11y-dialog-hide]', this.$el).concat(
      v('[data-a11y-dialog-hide="' + this._id + '"]')
    )),
    this._closers.forEach(
      function (t) {
        t.addEventListener('click', this._hide)
      }.bind(this)
    ),
    this._fire('create'),
    this
  )
}),
  (f.prototype.show = function (t) {
    return (
      this.shown ||
        ((this._previouslyFocused = document.activeElement),
        this.$el.removeAttribute('aria-hidden'),
        (this.shown = !0),
        this.$el.querySelector('[role="document"]') &&
          c(this.$el.querySelector('[role="document"]')),
        p(this.$el),
        document.body.addEventListener('focus', this._maintainFocus, !0),
        document.addEventListener('keydown', this._bindKeypress),
        this._fire('show', t)),
      this
    )
  }),
  (f.prototype.hide = function (t) {
    return this.shown
      ? ((this.shown = !1),
        this.$el.setAttribute('aria-hidden', 'true'),
        this.$el.querySelector('[role="document"]') &&
          u(this.$el.querySelector('[role="document"]')),
        this._previouslyFocused &&
          this._previouslyFocused.focus &&
          this._previouslyFocused.focus(),
        document.body.removeEventListener('focus', this._maintainFocus, !0),
        document.removeEventListener('keydown', this._bindKeypress),
        this._fire('hide', t),
        this)
      : this
  }),
  (f.prototype.destroy = function () {
    return (
      this.hide(),
      this._openers.forEach(
        function (t) {
          t.removeEventListener('click', this._show)
        }.bind(this)
      ),
      this._closers.forEach(
        function (t) {
          t.removeEventListener('click', this._hide)
        }.bind(this)
      ),
      this._fire('destroy'),
      (this._listeners = {}),
      this
    )
  }),
  (f.prototype.on = function (t, e) {
    return (
      void 0 === this._listeners[t] && (this._listeners[t] = []),
      this._listeners[t].push(e),
      this
    )
  }),
  (f.prototype.off = function (t, e) {
    var i = (this._listeners[t] || []).indexOf(e)
    return i > -1 && this._listeners[t].splice(i, 1), this
  }),
  (f.prototype._fire = function (t, e) {
    ;(this._listeners[t] || []).forEach(
      function (t) {
        t(this.$el, e)
      }.bind(this)
    )
  }),
  (f.prototype._bindKeypress = function (t) {
    this.$el.contains(document.activeElement) &&
      (this.shown &&
        27 === t.which &&
        'alertdialog' !== this.$el.getAttribute('role') &&
        (t.preventDefault(), this.hide(t)),
      this.shown &&
        9 === t.which &&
        (function (t, e) {
          var i = y(t),
            n = i.indexOf(document.activeElement)
          e.shiftKey && 0 === n
            ? (i[i.length - 1].focus(), e.preventDefault())
            : e.shiftKey ||
              n !== i.length - 1 ||
              (i[0].focus(), e.preventDefault())
        })(this.$el, t))
  }),
  (f.prototype._maintainFocus = function (t) {
    !this.shown ||
      t.target.closest('[aria-modal="true"]') ||
      t.target.closest('[data-a11y-dialog-ignore-focus-trap]') ||
      p(this.$el)
  }),
  'undefined' != typeof document &&
    ('loading' === document.readyState
      ? document.addEventListener('DOMContentLoaded', m)
      : window.requestAnimationFrame
      ? window.requestAnimationFrame(m)
      : window.setTimeout(m, 16))
export default f
